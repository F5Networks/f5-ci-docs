Light Weight Proxy (LWP)
========================

The LWP is designed to collect and report statistics (HTTP and TCP)
about services for which it acts as a proxy. In aggregate, these
statistics should provide visualization into a distributed application's
environment and health. The LWP also provides basic load balancing
services for client requests and connections across an applications's
server pool.

Project Setup
-------------

Gitlab LWP project:
git@bldr-git.int.lineratesystems.com:velcro/lightweight-proxy.git

Vagrant environment
~~~~~~~~~~~~~~~~~~~

::

    $ git clone [gitlab LWP project]
    $ cd lightweight-proxy
    $ vagrant up
    $ vagrant ssh

Manual environment setup
~~~~~~~~~~~~~~~~~~~~~~~~

::

    $ curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
    # CLANG_VERSION must be =3.7 currently
    $ sudo apt-get update
    $ sudo apt-get install build-essential make git nodejs \
        clang-format-${CLANG_VERSION}
    $ sudo ln -sf /usr/bin/clang-format-${CLANG_VERSION} /usr/bin/clang-format
    $ git clone [gitlab LWP project]
    $ cd lightweight-proxy
    $ npm install
    $ make test

Features
--------

Header Manipulation Module (HTTP only)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module provides functionality to manipulate HTTP headers (add,
remove or modify) using the underlying Node.js header manipulation API
(setHeader, getHeader, removeHeader) on the http.ClientRequest and
http.serverResponse objects. LWP will have the same semantics for adding
headers as the Node.js setHeader method, namely: \* Sets a single header
value for implicit headers \* If header already exists, its value will
be replaced \* Use an array of values if you need to send header with
multiple values

Load Balancing Module
~~~~~~~~~~~~~~~~~~~~~

This module queries the marathon-dns module for the current list of
servers and implements load balancing algorithm to choose a back-end
server. \* Round-robin load balancing \* Collection of load balancing
related statistics

Connection Module
~~~~~~~~~~~~~~~~~

This module is responsible for managing server connections which
involves the following: \* Maintain a mapping of client to server
connection \* Given a client connection, check if corresponding server
connection exists. Reuse connection if it already exists. Else create a
new one. \* Implement similar lookup in reverse direction (i.e., lookup
client connection given server connection). \* Manage lifetime of server
connection. Server connection is closed when: - client connection closes
- inactivity timeout fires

Forwarding Module
~~~~~~~~~~~~~~~~~

This module is responsible for forwarding data back and forth between
client and server connections. The initial implementation will support
the following modes: \* HTTP Forwarding - Provide HTTP proxy
functionality between client and server. - Collect HTTP statistics: +
across transactions: request / response counts, status code counts,
method counts, error counts, etc. + per transaction: client and server
address, url, method, status code, server RTT, latency at various
stages, etc. \* TCP Forwarding - Provide TCP proxy functionality between
client and application. - Collect TCP statistics: + across connections:
total connections, current connections, total closed, error counts, etc.
+ per connection: client and server address, bytes read, bytes written,
server RTT, latency at various stages, etc. - Other TCP configure
options: max connection limit

Configuration
~~~~~~~~~~~~~

Configuration is expected to be valid JSON containing a global section,
a stats section, and a virtual servers list.

-  Global section: configuration from the controller to control the
   process.
-  Stats section: configuration specific to statistics gathering and
   reporting.
-  Virtual servers section: list of virtual server objects representing
   service endpoints.

Configuration can be passed in one of two methods. The LWP can be run
with a --config-file option which accepts a file name containing the
JSON config. The LWP will also look for the LWP\_CONFIG environment
variable.

An LWP may be invoked simply via the command line thusly:

::

    $ lwp_proxy --config-file=/home/proxy/config.json

or

::

    $ LWP_CONFIG='{ "virtual-servers": { ... } }' lwp_proxy

The latter method eases LWP startup in a containerized environment,
starting a LWP via docker would be accomplished similarly to this:

::

    $ docker run -e LWP_CONFIG='{ "virtual-servers": { ... } }' -p 8080:8080 -d
    f5/lwp-proxy

Configuration Parameters
^^^^^^^^^^^^^^^^^^^^^^^^

Global section is defined as such:

+---------------------+----------+------------+-----------+--------------------------------+---------------------------------------------------------------------------+
| Field               | Type     | Required   | Default   | Description                    | Allowed Values                                                            |
+=====================+==========+============+===========+================================+===========================================================================+
| marathon-uri        | string   | Yes        |           | URL of the marathon service.   |                                                                           |
+---------------------+----------+------------+-----------+--------------------------------+---------------------------------------------------------------------------+
| console-log-level   | string   | No         | info      | Logging level                  | 'emerg', 'alert', 'crit', 'error', 'warning', 'notice', 'info', 'debug'   |
+---------------------+----------+------------+-----------+--------------------------------+---------------------------------------------------------------------------+

Stats section is defined as such:

+-----------------+----------+------------+-----------+----------------------------------------------------------+-------------------+
| Field           | Type     | Required   | Default   | Description                                              | Allowed Values    |
+=================+==========+============+===========+==========================================================+===================+
| url             | string   | Yes        |           | URL of the stats service.                                |                   |
+-----------------+----------+------------+-----------+----------------------------------------------------------+-------------------+
| token           | string   | Yes        |           | Authentication token for the stats server.               |                   |
+-----------------+----------+------------+-----------+----------------------------------------------------------+-------------------+
| flushInterval   | number   | No         | 10000     | Frequency in milliseconds of flushing stats to server.   |                   |
+-----------------+----------+------------+-----------+----------------------------------------------------------+-------------------+
| backend         | string   | Yes        |           | Type of backend stats service.                           | 'leo', 'splunk'   |
+-----------------+----------+------------+-----------+----------------------------------------------------------+-------------------+

A virtual server configuration object is defined as such:

+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+
| Field                 | Type          | Required   | Default         | Description                                                                             | Allowed Values   |
+=======================+===============+============+=================+=========================================================================================+==================+
| destination           | number        | Yes        |                 | Service port this virtual server accepts cxns.                                          |                  |
+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+
| service-name          | string        | Yes        |                 | Application tag this virtual server proxies for, services are discovered dynamically.   |                  |
+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+
| ip-protocol           | string        | No         | 'http'          | Service type of this virtual server.                                                    | 'http', 'tcp'    |
+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+
| load-balancing-mode   | string        | No         | 'round-robin'   | Load balancing algorithm for this virtual server.                                       | 'round-robin'    |
+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+
| keep-alive-msecs      | number        | No         | 1000            | Time (in milliseconds) between TCP keep-alive packets on socket to back-end server.     |                  |
+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+
| flags                 | JSON Object   | No         |                 | Flags specific to virtual server                                                        |                  |
+-----------------------+---------------+------------+-----------------+-----------------------------------------------------------------------------------------+------------------+

Flags section in virtual server is defined as such:

+-------------------+-----------+------------+-----------+--------------------------------------------------------------------+------------------+
| Field             | Type      | Required   | Default   | Description                                                        | Allowed Values   |
+===================+===========+============+===========+====================================================================+==================+
| x-forwarded-for   | boolean   | No         | false     | Flag to set x-forwarded-for header in request to backend server.   |                  |
+-------------------+-----------+------------+-----------+--------------------------------------------------------------------+------------------+
| x-served-by       | boolean   | No         | false     | Flag to set x-served-by header in response to client.              |                  |
+-------------------+-----------+------------+-----------+--------------------------------------------------------------------+------------------+

Example Config
^^^^^^^^^^^^^^

An example configuration containing two virtual server sections:

.. code:: javascript

    {
      "global": {
        "marathon-uri": "http://api.mesos.example.com",
        "console-log-level": "debug"
      },
      "stats": {
        "url": "http://localhost:8088",
        "token": "this-is-the-token",
        "flushInterval": 10000,
        "backend": "splunk"
      },
      "virtual-servers": [
        {
          "destination": 8080,
          "service-name": "web-server",
          "ip-protocol": "http",
          "load-balancing-mode": "round-robin",
          "flags" : {
            "x-forwarded-for": false,
            "x-served-by": true
          }
        },
        {
          "destination": 9090,
          "service-name": "identity",
          "ip-protocol": "http",
          "load-balancing-mode": "round-robin",
          "keep-alive-msecs": 2000
        }
      ]
    }

Statistics
~~~~~~~~~~

The LWP will provide statistics in Splunk format to a configured Splunk
server or an F5 statistics gatherer and visualizer.

Global Stats
^^^^^^^^^^^^

-  splunk source: lwp.transaction
-  splunk sourcetype: f5:lwp.stats:json
-  Frequency: periodic (controlled by LWP\_CONFIG environment variable)

+--------------------------+----------------------------------------------------------------------------------+
| Name                     | Description                                                                      |
+==========================+==================================================================================+
| tot\_requests            | Number of HTTP requests received from the clients                                |
+--------------------------+----------------------------------------------------------------------------------+
| clientside\_tot\_conns   | Number of TCP connections received from the clients                              |
+--------------------------+----------------------------------------------------------------------------------+
| clientside\_cur\_conns   | Current number of active TCP connections to the clients                          |
+--------------------------+----------------------------------------------------------------------------------+
| clientside\_max\_conns   | Maximum number of active TCP connections to the clients since the start of LWP   |
+--------------------------+----------------------------------------------------------------------------------+
| clientside\_bytes\_in    | Number of bytes read from the clients                                            |
+--------------------------+----------------------------------------------------------------------------------+
| clientside\_bytes\_out   | Number of bytes written to the clients                                           |
+--------------------------+----------------------------------------------------------------------------------+
| serverside\_tot\_conns   | Number of TCP connections opened to the servers                                  |
+--------------------------+----------------------------------------------------------------------------------+
| serverside\_cur\_conns   | Current number of active TCP connections to the servers                          |
+--------------------------+----------------------------------------------------------------------------------+
| serverside\_max\_conns   | Maximum number of active TCP connections to the servers since the start of LWP   |
+--------------------------+----------------------------------------------------------------------------------+
| server\_latency          | Average time (in milliseconds) to connection to a server                         |
+--------------------------+----------------------------------------------------------------------------------+
| max\_server\_latency     | Maximum time (in milliseconds) to connection to a server                         |
+--------------------------+----------------------------------------------------------------------------------+
| failed\_tcp\_conns       | Number of TCP connections that have failed                                       |
+--------------------------+----------------------------------------------------------------------------------+

TCP Transaction Stats
^^^^^^^^^^^^^^^^^^^^^

-  splunk source: lwp.transaction
-  splunk sourcetype: f5:lwp.stats:json
-  Frequency: per connection

+----------------------+--------------------------------------------------------------------+
| Name                 | Description                                                        |
+======================+====================================================================+
| client\_ip           | IP Address of the connection                                       |
+----------------------+--------------------------------------------------------------------+
| client\_port         | TCP Port of the connection                                         |
+----------------------+--------------------------------------------------------------------+
| pool\_member\_name   | ID of the particular server pool member (embeds the server name)   |
+----------------------+--------------------------------------------------------------------+
| pool\_member\_ip     | IP address for the particular server pool member                   |
+----------------------+--------------------------------------------------------------------+
| pool\_member\_port   | TCP port of the particular server pool member                      |
+----------------------+--------------------------------------------------------------------+

HTTP Transaction Stats
^^^^^^^^^^^^^^^^^^^^^^

-  splunk source: lwp.transaction
-  splunk sourcetype: f5:lwp.stats:json
-  Frequency: per request

+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| Name                      | Description                                                                                                                           |
+===========================+=======================================================================================================================================+
| client\_ip                | IP address of the connection associated with this request                                                                             |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| client\_port              | TCP port of the connect associated with this request                                                                                  |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| client\_user              | HTTP basic authentication user                                                                                                        |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| ttfb                      | time-to-first-byte: Time (in milliseconds) between when the request was received and starting to write out the response headers       |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| ttlb                      | time-to-first-byte: Time (in milliseconds) between when the request was received and writing out the last byte of the response body   |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| response\_status\_code    | HTTP response code (e.g. 200)                                                                                                         |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| http\_version             | HTTP protocol version being used by the client (e.g. "1.1")                                                                           |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| method\_name              | HTTP method for this request (e.g. "POST")                                                                                            |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| request\_date             | Time (in milliseconds) when this request was received                                                                                 |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| pool\_member\_name        | ID of the particular server pool member (embeds the server name)                                                                      |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| pool\_member\_ip          | IP address for the particular server pool member                                                                                      |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| pool\_member\_port        | TCP port of the particular server pool member                                                                                         |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| url                       | URL for the HTTP request                                                                                                              |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| user\_agent               | HTTP user agent of the client                                                                                                         |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| referrer                  | HTTP referer which indicates the originating URI                                                                                      |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| request\_headers\_size    | Size (in bytes) of the request headers                                                                                                |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| request\_body\_size       | Size (in bytes) of the request body                                                                                                   |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| response\_headers\_size   | Size (in bytes) of the response headers                                                                                               |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| response\_body\_size      | Size (in bytes) of the response body                                                                                                  |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
