lwp-controller
==============

Status: |build status|

Intro
-----

The lwp-controller is designed to run as a docker container in
Mesos+Marathon. It watches applications being created and destroyed.
When an application with the proper labels is created a new LWP is
created for that application and it is scaled to have the requested
number of tasks.

Configuration
-------------

Environment variables are used to configure the lwp-controller. The
variables are:

- MARATHON\_URL (URL of the Marathon API. default: http://127.0.0.1:8080)
- LWP\_ENABLE\_LABEL (label used to determine LWP requirements. default: f5-lwp)
- LWP\_DEFAULT\_CPU (amount of CPU for LWP tasks. default: 0.1)
- LWP\_DEFAULT\_MEM (amount of memory for LWP tasks. default: 64)
- LWP\_DEFAULT\_STORAGE (amount of memory for LWP tasks. default: 0)
- LWP\_DEFAULT\_COUNT\_PER\_APP (number of LWP tasks per application. default: 1)
- LWP\_DEFAULT\_CONTAINER (location of docker image to pull. default: f5networks/lwp)
- LWP\_DEFAULT\_CONTAINER\_PORT (container port to expose. default: 8000)
- LWP\_DEFAULT\_URIS (comma separated list of URIs to pass to Marathon. default: EMPTY)
- LWP\_DEFAULT\_VS\_KEEP\_ALIVE (Virtual server keep alive, in msecs. default: 1000)
- LWP\_DEFAULT\_VS\_PROTOCOL (protocol for virtual server, http or tcp. default: http)
- LWP\_DEFAULT\_STATS\_URL (Url for sending stats. default: None)
- LWP\_DEFAULT\_STATS\_TOKEN (Stats authentication token. default: None)
- LWP\_DEFAULT\_STATS\_FLUSH\_INTERVAL (Stats flush intercal, in msecs. default: 10000)
- LWP\_DEFAULT\_STATS\_BACKEND (Stats backend type, i.e. splunk. default: None)
- LWP\_DEFAULT\_FORCE\_PULL (Sets Marathon to force pull every time the LWP starts. default: true)
- LWP\_ENV\_PREFIX (prefix for environment variables to pass to the LWP. default: LWP\_ENV\_)
- LWP\_DEFAULT\_LOG\_LEVEL (logging level. default: INFO)
- LWP\_DEFAULT\_VS\_FLAGS (flags for configuring LWP behavior. Only bools (true or false) are permitted as values. default: {})

Example
-------

Usually, the lwp-controller is deployed by Marathon. This is an example
of how it would be run by a human on the command-line. This is provided
for enhanced understanding, not as a recommendation.

.. code:: sh

    docker run -it -d \
      -e MARATHON_URL="http://172.28.128.3:8080" \
      -e LWP_ENABLE_LABEL lwp-myapp \
      -e LWP_DEFAULT_CONTAINER f5networks/lwp
      f5velcro/lwp-controller

Then create your application in the Marathon instance running at
172.28.128.3 and label it with the label:

::

    lwp-myapp:enable

The lwp-controller will create a new application in your Marathon
cluster to be the LWP for your application.

Overriding Controller Configuration
-----------------------------------

Default values configured for the LWP Controller can be modified on a
per-app basis. The following labels can be applied to the application
being controlled and will override the corresponding LWP Controller
default value.

-  LWP\_VS\_KEEP\_ALIVE (overrides LWP\_DEFAULT\_VS\_KEEP\_ALIVE)
-  LWP\_VS\_PROTOCOL (overrides LWP\_DEFAULT\_VS\_PROTOCOL)
-  LWP\_LOG\_LEVEL (overrides LWP\_DEFAULT\_LOG\_LEVEL)
-  LWP\_STATS\_URL (overrides LWP\_DEFAULT\_STATS\_URL)
-  LWP\_STATS\_TOKEN (overrides LWP\_DEFAULT\_STATS\_TOKEN)
-  LWP\_STATS\_FLUSH\_INTERVAL (overrides
   LWP\_DEFAULT\_STATS\_FLUSH\_INTERVAL)
-  LWP\_STATS\_BACKEND (overrides LWP\_DEFAULT\_STATS\_BACKEND)
-  LWP\_FORCE\_PULL (overrides LWP\_DEFAULT\_FORCE\_PULL)
-  LWP\_CPU (overrides LWP\_DEFAULT\_CPU)
-  LWP\_MEM (overrides LWP\_DEFAULT\_MEM)
-  LWP\_STORAGE (overrides LWP\_DEFAULT\_STORAGE)
-  LWP\_COUNT\_PER\_APP (overrides LWP\_DEFAULT\_COUNT\_PER\_APP)
-  LWP\_CONTAINER (overrides LWP\_DEFAULT\_CONTAINER)
-  LWP\_URIS (overrides LWP\_DEFAULT\_URIS)
-  LWP\_VS\_FLAGS (merges with and overrides collisions on
   LWP\_DEFAULT\_VS\_FLAGS)

Configuring the LWP (not yet implemented)
-----------------------------------------

LWP is configured by adding a special label to your app containing the
desired configuration in JSON format. The special label is
``LWP_CONFIG``. See documentation at
https://bldr-git.int.lineratesystems.com/velcro/traffic-director-proxy
for details. Note, values specified in this config will not be
overwritten by the LWP Controller. Specifying the app name and port
might lead to misconfiguration or unexpected behavior. Avoid this in
general. There are no known use cases for specifying these yet.

The LWP Controller (TDC) can also pass through environment variables for
additional configuration. Add labels to your application to pass through
to the LWP using the LWP\_ENV\_PREFIX.

Example
-------

Add to pass through the environment ``FOO=bar`` just add this label to
your application:

::

    LWP_ENV_FOO:bar

Also, any of the ``LWP_DEFAULT_*`` environment variables can be
overriden by adding a label. For example, override the LWP\_DEFAULT\_CPU
and set it to 2.3 by adding the label:

::

    LWP_ENV_LWP_CPU:2.3

Known Limitations
-----------------

-  Changes to LWP\_ENABLE\_LABEL cause the lwp-controller to start
   controlling a new set of apps which have the new value as a label.
   All apps with the old label will be ignored. Since the lwp-controller
   is stateless with respect to Marathon it needs to be this way. An
   easy way to avoid this problem is to never change the
   LWP\_ENABLE\_LABEL of an existing lwp-controller. Always just destroy
   the lwp-controller and create a new one. This way there is no
   confusion or expectation of a different behavior.

-  More than 1 Mesos slave is required. By default, Marathon's restart
   policy starts a new instance of the app being modified before killing
   the old version. When there is only 1 slave the LWP reserves a port
   on that slave and then a new version cannot be started when there is
   a configuration modification. This will be addressed in a future
   version by permitting Marathon's restart policy to be configurable on
   a per lwp-controller or per app basis.

.. |build status| image:: https://bldr-git.int.lineratesystems.com/velcro/lwp-controller/badges/master/build.svg
   :target: https://bldr-git.int.lineratesystems.com/velcro/lwp-controller/commits/master
