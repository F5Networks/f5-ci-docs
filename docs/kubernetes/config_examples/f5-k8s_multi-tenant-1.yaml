# Deploy a BIG-IP Controller instance that creates objects for all namespaces
# in the "ose-cluster" partition on the BIG-IP system
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8s-bigip-ctlr-deployment
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      name: k8s-bigip-ctlr
      labels:
        app: k8s-bigip-ctlr
    spec:
      serviceAccountName: bigip-ctlr-serviceaccount
      containers:
        - name: k8s-bigip-ctlr-1
          image: "f5networks/k8s-bigip-ctlr:1.3.0"
          env:
            - name: BIGIP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: bigip-login
                  key: username
            - name: BIGIP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bigip-login
                  key: password
          command: ["/app/bin/k8s-bigip-ctlr"]
          args: [
            "--bigip-partition=ose-cluster",
            "--bigip-url=10.190.24.171",
            "--bigip-username=$(BIGIP_USERNAME)",
            "--bigip-password=$(BIGIP_PASSWORD)",
            "--use-secrets=true",
            "--pool-member-type=cluster",
            ]

---
# simple fanout Ingress resource
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: myapp.https
 namespace: tenant1
 annotations:
  virtual-server.f5.com/ip: "1.2.3.4"
  virtual-server.f5.com/partition: "ose-cluster"
  virtual-server.f5.com/balance: "least-connections-node"
  virtual-server.f5.com/http-port: "443"
  virtual-server.f5.com/health: |
      [
        {
          "path":     "myapp.com/",
          "send":     "HTTP GET /health/",
          "interval": 5,
          "timeout":  10
        }, {
          "path":     "myapp.com/images/",
          "send":     "HTTP GET /health/images/",
          "interval": 5,
          "timeout":  5
        }, {
          "path":     "myapp.com/videos/",
          "send":     "HTTP GET /health/videos/",
          "interval": 5,
          "timeout":  5
        }, {
          "path":     "myapp.com/ads/",
          "send":     "HTTP GET /health/ads/",
          "interval": 5,
          "timeout":  5
        }
      ]
  ingress.kubernetes.io/ssl-redirect: "true"
  ingress.kubernetes.io/allow-http: "false"
spec:
  rules:
  - host: www.myapp.com
    http:
      paths:
      - path: myapp.com
        backend:
          serviceName: web-frontend
          servicePort: 443
      - path: myapp.com/images
        backend:
          serviceName: image-svc1
          servicePort: 443
          serviceName: image-svc2
          servicePort: 443
      - path: myapp.com/videos
        backend:
          serviceName: video-svc1
          servicePort: 443
          serviceName: video-svc2
          servicePort: 443
      - path: myapp.com/ads
        backend:
          serviceName: ad-svc1
          servicePort: 443
          serviceName: ad-svc2
          servicePort: 443
  tls:
    - secretName: /Common/clientssl

