F5 Lightweight Proxy and Lightweight Proxy Controller
=====================================================

The F5 Lightweight Proxy (LWP), which provides high availability of applications running within the Mesos environment, is delivered in the form of a Docker container. The LWP makes applications highly availabile by load balancing requests from applications running within Mesos to multiple instances of other applications running within Mesos.

The F5 Lightweight Proxy (LWP) Controller is a component of the F5 Container Service Integrator for Mesos and is delivered in the form of a Docker container. The LWP Controller watches for events generated by the Mesos scheduler, Marathon, that have a specific label, and creates and configure instances of the Lightweight Proxy.

Operation
---------

For each application that the Marathon scheduler starts or stops that has a specific label defined, the LWP Controller will ensure a lightweight proxy, with the proper configuration, exists for the application . Depending on the Marathon event messages, there are several possible actions the Lightweight Proxy Controller will perform.

* If no LWP exists for the application, LWP Controller will create a new LWP instance and add the application instance to the pool to be load balanced.

* If a LWP already exists for the application, LWP Controller will update the LWP instance(s) for the application by adding or removing pool members.

* When an application is removed from Marathon, the LWP Controller will remove any LWP(s) it created for that application.


.. figure:: ../_static/mesos-flow-diagram.png


.. list-table::
    :widths: 10, 30
    :header-rows: 1

    * -
      - **Configuration Flow**
    * - 1
      - Administrator configures a new container application AppB in Marathon, requesting 2 tasks and LWP services
    * - 2
      - Marathon schedules and starts 2 tasks in the Mesos cluster
    * - 3
      - Marathon notifies F5 Container Service Integrator of new app and 2 new tasks
    * - 4
      - F5 Container Service Integrator configures Marathon to start a new container application that is LWP-AppB.
    * - 5
      - Marathon starts an LWP-AppB application with 1 task. LWP application learns about AppB-Task1 and AppB-Task2 from Marathon.
    * -
      - **Traffic Flow**
    * - 6
      - Client Microservice AppA-Task1 connects to LWP-AppB and sends request
    * - 7
      - LWP proxies request to a pool member (e.g. AppB-Task1)



Discovery
---------

The LWP Controller learns the address of each application instance directly from the Marathon scheduler and adds the address to the pool configuration of the LWP instance that is managing traffic for that application.

An application running within the Mesos environment that needs to access another application that is being load balanced by the LWP will connect to the LWP instance for that application. The application will discover the address of the LWP instance by querying the Mesos DNS. Because the application needs to know the IP address, port and protocol of the LWP, a DNS query type of SRV is required.

By default, the LWP Controller will, via Marathon, start one LWP instance per application. It is possible, on a per application basis, to have more than one LWP instance for that application by providing a label that modifies the default behavior. In that case, more than one record will be returned by Mesos DNS.

By convention, the DNS name of a LWP for an application is “lwp-<application name>.<domain name>”. So, for example, if an application is named “app1” and the domain is “example.com”, the DNS name of the LWP for that application will be “lwp-app1.example.com”.

Visibility
----------

The LWP collects traffic statistics for the applications that it is load balancing and this data can be sent to an  analytics application. The location and type of the analytics application is configured on the LWP controller.



