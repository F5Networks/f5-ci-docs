kind: ConfigMap
apiVersion: v1
metadata:
  name: f5-asp-config
  namespace: kube-system
data:
  asp.config.json: |
    {
      "global": {
        "console-log-level": "info",
        "ephemeral-store": {
          # Cluster IP address of the ephemeral store Service
          "host": "<ephemeral-store-service_cluster-IP>",
          "port": 8087,
          // required for ASP health sharding
          "components": {
            "health": {
              "nodes": [
                // Provide the Node ID for each node the ASP daemonset will run on
                "172.16.1.3",
                "172.16.1.5",
                "172.16.1.6",
                "<...>"
              ],
              "replication-count": 2
            }
          }
        }
      },
      "orchestration": {
        "kubernetes": {
          "config-file": "/var/run/kubernetes/proxy-plugin/service-ports.json",
          "poll-interval": 500
        }
      },
      "stats": {
          "url": "<splunk_url>",
          "token": "<splunk_auth_token>",
          "flush-interval": 10000,
          "backend": "splunk"
        }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: f5-asp
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        name: f5-asp
    spec:
      hostNetwork: true
      containers:
        - name: f5-asp
          image: "store/f5networks/asp:1.1.0"
          args:
            # config-file corresponds to the "asp.config.json" section
            # of the ConfigMap containing the global ASP configurations
            # DO NOT CHANGE
            - --config-file
            - /etc/configmap/asp.config.json
          securityContext:
            privileged: false
          # Required for ASP health data sharding
          env:
          - name: ASP_HEALTH_NODE_ID
            valueFrom:
              fieldRef:
                # K8s will supply the value for this field using
                # one of the Node IDs provided in the ASP global ConfigMap
                fieldPath: spec.nodeName
          volumeMounts:
          # mount a new directory
          - name: plugin-config
            # the path the directory will be added to; DO NOT CHANGE
            mountPath: /var/run/kubernetes/proxy-plugin
            readOnly: true
          # mount a new directory
          - name: asp-config
            # the path the directory will be added to; DO NOT CHANGE
            mountPath: /etc/configmap
          # mount a directory for the ephemeral store user
          - name: user-asp
            # the path the directory will be added to; DO NOT CHANGE
            # the user certificate and key are mounted at this location
            mountPath: /ephemeral-store-certs/myuser
            readOnly: true
          # mount a directory for the ephemeral store Root
          - name: rootca-cert
            # the path the directory will be added to; DO NOT CHANGE
            mountPath: /ephemeral-store-certs/rootca-cert
            readOnly: true
      # For Kubernetes v1.6.x and higher add toleration to make asp
      # run on master node. For Kubernetes v1.4.x remove toleration
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: plugin-config
          hostPath:
            path: /var/run/kubernetes/proxy-plugin
        - name: asp-config
          # replace with name of your ASP ConfigMap
          configMap:
            name: f5-asp-config
        - name: user-asp
          secret:
            # The Kubernetes Secret containing the ephemeral store user's
            # certificate and key
            secretName: ephemeral-store-user-myuser
        - name: rootca-cert
          # The Kubernetes Secret containing the Root certificate and key
          secret:
            secretName: ephemeral-store-user-rootca-cert
      # provide the name of the Secret containing the Docker login credentials
      # REQUIRED TO PULL THE ASP IMAGE FROM DOCKER STORE
      imagePullSecrets:
        - name: <my-docker-secret>
